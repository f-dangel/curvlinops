# This file is used to configure the project.
# Read more about the various options under:
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[build-system]
requires = ["setuptools >= 61.0", "setuptools_scm"]
build-backend = "setuptools.build_meta"

###############################################################################
#                                 Main library                                #
###############################################################################

[project]
name = "curvlinops-for-pytorch"
authors = [
    { name = "Felix Dangel" },
    { name = "Runa Eschenhagen" },
    { name = "Lukas Tatzel" },
]
urls = { Repository = "https://github.com/f-dangel/curvlinops" }
description = "scipy Linear operators for curvature matrices in PyTorch"
readme = { file = "README.md", content-type = "text/markdown; charset=UTF-8; variant=GFM" }
license = { text = "MIT" }
# Add all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]
# Dependencies of the project:
dependencies = [
    "backpack-for-pytorch>=1.6.0,<2.0.0",
    "torch>=2.0",
    "scipy>=1.7.1,<2.0.0",
    "numpy<2.0.0",
    "tqdm>=4.61.0,<5.0.0",
    "einops",
    "einconv",
]
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
requires-python = ">=3.9"

###############################################################################
#                           Development dependencies                          #
###############################################################################

[project.optional-dependencies]
# Dependencies needed to run the tests.
test = [
    "matplotlib",
    "tueplots",
    "coveralls",
    "pytest",
    "pytest-cov",
    "pytest-optional-tests",
]

# Dependencies needed for linting.
lint = [
    "black",
    "ruff",
    "darglint",
    "pydocstyle",
    "isort",
]

# Dependencies needed to build/view the documentation.
docs = [
    "memory_profiler",
    "transformers",
    "tiktoken",
    "datasets",
    "matplotlib",
    "sphinx-gallery",
    "sphinx-rtd-theme",
    "tueplots"
]

###############################################################################
#                       Development tool configurations                       #
###############################################################################
[tool.setuptools_scm]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[tool.pydocstyle]
convention = "google"
match = '.*\.py'
match_dir = '^(?!(test|.git)).*'

[tool.ruff]
# Same as flake8's max-line-length
line-length = 88

[tool.ruff.lint]
# Enable all rules from flake8 (E, F), plus additional ones
select = ["E", "F", "B", "C", "W", "B9", "PLE", "PLW", "PLR"]
ignore = [
    # E501 max-line-length (replaced by B950 (max-line-length + 10%))
    "E501",
    # C408 use {} instead of dict() (ignored because pytorch uses dict)
    "C408",
    # E203 whitespace before :
    "E203",
    # E231 missing whitespace after ','
    "E231",
    # W291 trailing whitespace
    "W291",
    # E203 line break before binary operator (replaces W503)
    "E203",
    # Line break occurred after a binary operator (replaces W504)
    "E226",
    # B905 `zip()` without an explicit `strict=` parameter
    "B905",
    # Too many arguments in function definition (9 > 5)
    "PLR0913",
    # Magic value comparison
    "PLR2004",
    # Loop variable overwritten by assignment target
    "PLW2901",
]

[tool.ruff.lint.per-file-ignores]
# Add any per-file ignores here if needed

[tool.ruff.lint.flake8-bugbear]
# Allow assert statements in tests
extend-immutable-calls = ["pytest.raises", "pytest.warns", "pytest.mark.skip"]
